/*
Q: Same as before.
A: Use CASE statements to sort through combinations of 3 Attributes *most* efficiently.
Pros:
  1) The runtime is now completely optimized because the maximum number of conditionals evaluated is the same as the number of attributes (12/8 => 3/8).
  2) The favoring of the combinations (Attribute_1 over Attribute_2 over Attribute_3) is eliminated.
Cons:
  1) The structure is complex to expand.
Summary Update: Traded a complex structure that required constant maintenance for syntax that is challenging to expand, but doesn't favor an attribute, does not require constant reworking, and does have the fastest runtime possible.
*/
SELECT
t1.primary_key
,CASE
  WHEN t1.Attribute_1 = 1
    THEN CASE
      WHEN t1.Attribute_2 = 1
        THEN CASE
          WHEN t1.Attribute_3 = 1 THEN 7
          ELSE 6
        END
      WHEN t1.Attribute_3 = 1 THEN 5
      ELSE 1
    END
  WHEN t1.Attribute_2 = 1 
    THEN CASE
      t1.Attribute_3 = 1 THEN 4
      ELSE 2
    END
  WHEN t1.Attribute_3 = 1 THEN 3
  ELSE 0
END AS Results
FROM Tables_skema.Table AS t1
WHERE Results <> 0
;
